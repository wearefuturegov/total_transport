<div class='container'>
  <div class='inner'>
    <%= text_field_tag :from, nil, placeholder: 'From', id: :from, value: @from.try(:name) %>
    <div id="from_result"></div>
    <%= text_field_tag :to, nil, placeholder: 'To', disabled: @from.nil?, id: :to, value: @to.try(:name) %>
    <div id="to_result"></div>
    <a id='submit' class='button <%= @from.nil? ? 'hidden' : '' %>'>See available journeys</a>

    <div id="map"></div>
    
    <%= render 'journeys', journeys: @journeys, booking: @booking %>
  </div>
</div>

<% content_for :js do %>

<script type='text/javascript'>
  var blue = '#1565c0',
      green = '#45B554';

  var centreMap = L.map('map', {
    zoomControl: false
  }).setView([52.0891, 0.5600], 9);
  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
    maxZoom: 18,
    id: 'mapbox.light',
    accessToken: 'pk.eyJ1Ijoid2VhcmVmdXR1cmVnb3YiLCJhIjoiY2o3dDc4bGpoNGd2ajJ3bWp4ZWg3dWd0YiJ9.SbUuzZNHrNFQmgjtYUTU-A'
  }).addTo(centreMap);

  function _addCircle(coords, color) {
    L.circle(coords, {
      color: color,
      fillColor: color,
      fillOpacity: 0.25,
      radius: 1000
    }).addTo(centreMap);
    centreMap.setView(coords, 10);
  }

  function _changeOrigin() {
    $('#to').val('');
    // TODO: Remove destination circles
  }
  
  var getPlace = (osID, type, successFunction, failureFunction) => {
    $.getJSON('/places/'+ osID +'.json', successFunction).fail(failureFunction);
  }
  
  var chosenFrom = () => {
    var chosenItem = $("#from").getSelectedItemData();
    $('#from').data('placename', chosenItem.NAME1);
    var success = (place) => {
      _addCircle([place.latitude, place.longitude], blue);
      $('#from').data('slug', place.slug);
      $('#to').removeAttr('disabled');
      options.list.onClickEvent = chosenTo;
      $('#to').easyAutocomplete(options);
    }
    var fail = (osID) => {
      template = HandlebarsTemplates['journeys/no_from']({
        place: $('#from').data('placename')
      });
      $('#from_result').html(template);
    }
    getPlace(chosenItem.ID, 'origin', success, fail);
  }
  
  var chosenTo = () => {
    var chosenItem = $("#to").getSelectedItemData();
    $('#to').data('placename', chosenItem.NAME1);
    var success = (place) => {
      _addCircle([place.latitude, place.longitude], blue);
      var $submit = $('#submit');
      $submit.removeClass('hidden');
      $submit.attr('href', '/journeys/' + $('#from').data('slug') + '/' + place.slug )
    }
    var fail = (osID) => {
      $.getJSON('/places.json?origin=' + $('#from').data('slug'), function(data) {
        template = HandlebarsTemplates['journeys/no_to']({
          from: $('#from').data('placename'),
          to: $('#to').data('placename'),
          from_slug: $('#from').data('slug'),
          destinations: data
        });
        $('#to_result').html(template);
      });
    }
    options.list.onClickEvent = getPlace(chosenItem.ID, 'destination', success, fail);
  }

  var options = {
    url: function(place) {
      return '/places.json?query=' + place
    },
    getValue: "NAME1",
    list: {
      onClickEvent: chosenFrom
    },
    theme: 'square'
  };

  $('#from').easyAutocomplete(options);

  $('#from').change(() => {
    _changeOrigin();
  });
  
  <% if @from && @to %>
    _addCircle([<%= @from.latitude %>, <%= @from.longitude %>], blue);
    _addCircle([<%= @to.latitude %>, <%= @to.longitude %>], green);
  <% end %>

</script>
<% end %>
