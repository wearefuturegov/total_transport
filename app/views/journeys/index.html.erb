<div class='container'>
  <div class='inner'>
    <%= form_tag journeys_path, method: :get do %>
      <%= text_field_tag nil, nil, placeholder: 'From', id: :from_name %>
      <%= hidden_field_tag :from %>
      <%= text_field_tag nil, nil, placeholder: 'To', disabled: true, id: :to_name %>
      <%= hidden_field_tag :to %>
      <%= submit_tag 'See available journeys' %>
    <% end %>

    <div id="map"></div>
    
    <%= render 'journeys', journeys: @journeys, booking: @booking %>
  </div>
</div>

<% content_for :js do %>

<script type='text/javascript'>
  var blue = '#1565c0',
      green = '#45B554';

  var centreMap = L.map('map', {
    zoomControl: false
  }).setView([52.0891, 0.5600], 9);
  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
    maxZoom: 18,
    id: 'mapbox.light',
    accessToken: 'pk.eyJ1Ijoid2VhcmVmdXR1cmVnb3YiLCJhIjoiY2o3dDc4bGpoNGd2ajJ3bWp4ZWg3dWd0YiJ9.SbUuzZNHrNFQmgjtYUTU-A'
  }).addTo(centreMap);

  function _addCircle(coords, color) {
    L.circle(coords, {
      color: color,
      fillColor: color,
      fillOpacity: 0.25,
      radius: 1000
    }).addTo(centreMap);
    centreMap.setView(coords, 10);
  }

  function _changeOrigin() {
    $('#to_name').val('');
    // TODO: Remove destination circles
  }

  var enableTo = () => {
    var chosenItem = $("#from_name").getSelectedItemData();
    var slug = chosenItem.slug;
    $('#from').val(slug);

    options.url = function() {
      slug = $('#from').val();
      return 'places.json?origin=' + slug
    }

    $.getJSON(options.url(), function(data) {
      _addCircle([chosenItem.latitude, chosenItem.longitude], blue);

      if(data.length > 0) {
        $('#to_name').removeAttr('disabled');
        options.list.onClickEvent = function() {
          var data = $("#to_name").getSelectedItemData();
          var lat = data.latitude
          var lng = data.longitude
          _addCircle([lat, lng], green)
          $('#to').val(data.slug);
        }
        $('#to_name').easyAutocomplete(options);
      } else {
        $('#to_name').attr('placeholder', 'No destinations');
        $('#to_name').attr('disabled', 'disabled');
      }
    });
  };

  var options = {
    url: '/places.json',
    getValue: "name",
    list: {
      match: {
        enabled: true
      },
      onClickEvent: enableTo
    },
    theme: 'square'
  };

  $('#from_name').easyAutocomplete(options);

  $('#from_name').change(() => {
    _changeOrigin();
  });

  $(() => {
    if($.urlParam('from')) {
      var fromId = $.urlParam('from');
      var toId = $.urlParam('to');
      $.getJSON('places.json?origin_id=' + fromId, function(data) {
        var chosenFrom = data.find(item => item.id == fromId);
        var chosenTo = data.find(item => item.id == toId);
        $('#from_name').val(chosenFrom.name);
        $('#to_name').val(chosenTo.name);
        _addCircle([chosenFrom.latitude, chosenFrom.longitude], blue);
        _addCircle([chosenTo.latitude, chosenTo.longitude], green);
        $('#to_name').removeAttr('disabled');
      });
    }
  });

</script>
<% end %>
